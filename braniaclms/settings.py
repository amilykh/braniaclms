"""
Django settings for braniaclms project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
# ----- определение базовой дирректории, в которой находится проект ------------
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- BASE_DIR - корень проекта, т.е. то место, где лежит manage.py ------------
# --- конец определения базовой дирректории, в которой находится проект --------

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = \
    'django-insecure-anb_kwlj6&ls6%*=oplg8@6by^xow3)cg^0xdbw**g@%!*&$i)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
# ALLOWED_HOSTS нужен, когда мы проект заливаем на какой-либо сервер.

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'crispy_forms',  # библиотека для красивого вывода форм
    'social_django',

    'authapp',
    'mainapp',  # обязательно прописываем все создаваемые приложения здесь
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'braniaclms.urls'  # точка входа

TEMPLATES = [
    {
        # шаблонизатор
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],  # где ещё могут располагаться шаблоны для
        # нашего проекта
        'APP_DIRS': True,  # поиск папок templates
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'mainapp.context_processor.my_context_processor',
                'social_django.context_processors.backends',  # for social
                'social_django.context_processors.login_redirect',  # for social
            ],
        },
    },
]

WSGI_APPLICATION = 'braniaclms.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'ru-ru'  # админка

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static',  # мы загружаем статику
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'  # картинки, видео, аудиодорожки, просто файлы
# пользователь загружает медиа
MEDIA_ROOT = BASE_DIR / 'media'

AUTH_USER_MODEL = 'authapp.User'  # дописать путь до нашей новой модели
# После этого возникает деградация данных, т.е. не соответствие с базой данных
# Как избежать её?
# 1) Останавливаем сервер
# 2) Удаляем  базу db.sqlite3
# 3) Делаем заново migrate
#    python3 manage.py migrate
# Создался новый чисты экземпляр базы с нашим созданным пользователем

LOGIN_REDIRECT_URL = 'mainapp:index'

LOGOUT_REDIRECT_URL = 'mainapp:index'

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

AUTHENTICATION_BACKENDS = (
    'social_core.backends.github.GithubOAuth2',  # 2-я версия OAuth
    'django.contrib.auth.backends.ModelBackend',  # базовый
)

# REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS':
# 'rest_framework.pagination.LimitOffsetPagination', 'PAGE_SIZE': 2 }


# Пока в тестовых целях не правильный вариант!
# Ключи складывают в переменную окружения и работают на подгузку!!!
# На худой конец, складыают в какой-либо файл, который пойдёт в gitignore
# и эти ключи не полетят в репозиторий.
SOCIAL_AUTH_GITHUB_KEY = '621c325d79e67f521a52'
# генерируется один раз
SOCIAL_AUTH_GITHUB_SECRET = 'b55d60a862853adcc3449f92ce4d7bf0832dac49'

CRISPY_TEMPLATE_PACK = 'bootstrap4'  # сообщаем crispy_forms о том,
# что мы используем bootstrap4 и на основе него нам нужно разукрашивать
# все формы

